{"version":3,"sources":["src/index.js"],"names":["url","addForm","document","forms","addtask","searchForm","findtask","todos","getElementById","addEventListener","addTaskHandler","findTodos","makeRequest","query","fetch","method","headers","body","JSON","stringify","then","res","json","printTodo","title","completed","id","user","li","createElement","className","innerHTML","name","setAttribute","checkbox","type","handleTodoStatus","prepend","del","handleDeleteTodo","append","data","forEach","todo","e","preventDefault","taskname","value","newTaskQuery","createTodo","reset","searchText","searchname","searchQuery","todoId","parentElement","dataset","changeStatusQuery","checked","updateTodo","removeAttribute","deleteQuery","deleteTodo","remove"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const url = 'https://graphqlzero.almansi.me/api';\r\n\r\nconst addForm = document.forms.addtask;\r\nconst searchForm = document.forms.findtask;\r\nconst todos = document.getElementById('todos');\r\n\r\naddForm.addEventListener(\"submit\", addTaskHandler);\r\nsearchForm.addEventListener(\"submit\", findTodos);\r\n\r\nconst makeRequest = (query) => {\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ query })\r\n    }).then((res) => res.json());\r\n};\r\n\r\nfunction printTodo({ title, completed = false, id = \"\", user = {} }) {\r\n    const li = document.createElement(\"li\");\r\n    li.className = \"list-group-item\";\r\n    li.innerHTML = `&nbsp; ${title} | ID: ${id} | by <b>${user.name}</b>`;\r\n    li.setAttribute(\"data-id\", id);\r\n\r\n    const checkbox = document.createElement(\"input\");\r\n    checkbox.type = \"checkbox\";\r\n    if (completed) {\r\n        checkbox.setAttribute(\"checked\", \"true\");\r\n    }\r\n    checkbox.addEventListener(\"change\", handleTodoStatus);\r\n    li.prepend(checkbox);\r\n\r\n    const del = document.createElement(\"button\");\r\n    del.className = \"btn btn-link mb-1\";\r\n    del.innerHTML = \"&times;\";\r\n    del.addEventListener(\"click\", handleDeleteTodo);\r\n    li.append(del);\r\n\r\n    todos.prepend(li);\r\n}\r\n\r\nmakeRequest(`query Todos {\r\n  todos{\r\n    data {\r\n      id\r\n      title\r\n      completed\r\n      user {\r\n        name\r\n      }\r\n    }\r\n  }\r\n}`).then(({ data }) => data.todos.data.forEach((todo) => printTodo(todo)));\r\n\r\nasync function addTaskHandler(e) {\r\n    e.preventDefault();\r\n    if (addForm.taskname.value) {\r\n        const newTaskQuery = `mutation CreateTodo {\r\n      createTodo(input:{title: \"${addForm.taskname.value}\", completed: false}){\r\n        title\r\n        completed\r\n        id\r\n      }\r\n    }`;\r\n\r\n        const data = await makeRequest(newTaskQuery);\r\n        printTodo(data.data.createTodo);\r\n        addForm.reset();\r\n    }\r\n}\r\n\r\nasync function findTodos(e) {\r\n    e.preventDefault();\r\n    const searchText = searchForm.searchname.value;\r\n\r\n    if (searchText) {\r\n        const searchQuery = `query searchQuery{\r\n        todos(options:{search:{q: \"${searchText}\"}, sort:{field: \"id\", order: ASC}}){\r\n            data {\r\n              id\r\n              title\r\n              completed\r\n              user { name }\r\n            }\r\n          }\r\n    }`;\r\n        const { data } = await makeRequest(searchQuery);\r\n\r\n        todos.innerHTML = \"\";\r\n        data.todos.data.forEach((todo) => printTodo(todo));\r\n    }\r\n}\r\n\r\nasync function handleTodoStatus() {\r\n    const todoId = this.parentElement.dataset.id;\r\n\r\n    const changeStatusQuery = `mutation ChangeStatus {\r\n      updateTodo(id: \"${todoId}\", input: {completed: ${this.checked}}) {\r\n          completed\r\n      }\r\n  }`;\r\n\r\n    const data = await makeRequest(changeStatusQuery);\r\n    if (data.data.updateTodo.completed) {\r\n        this.setAttribute(\"checked\", \"true\");\r\n    } else {\r\n        this.removeAttribute(\"checked\");\r\n    }\r\n}\r\n\r\nasync function handleDeleteTodo() {\r\n    const todoId = this.parentElement.dataset.id;\r\n    const deleteQuery = `mutation DeleteTodo {\r\n      deleteTodo(id: \"${todoId}\")\r\n  }`;\r\n\r\n    const data = await makeRequest(deleteQuery);\r\n\r\n    if (data.data.deleteTodo) {\r\n        this.parentElement.remove();\r\n    }\r\n}\r\n"]}